{"version":3,"file":"component---src-pages-index-tsx-d3cc732160039827ebc6.js","mappings":"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","sources":["webpack://mcsamuel/./src/components/navbar.tsx","webpack://mcsamuel/./src/components/centeredTitle.tsx","webpack://mcsamuel/./src/components/avatarPortrait.tsx","webpack://mcsamuel/./src/components/button.tsx","webpack://mcsamuel/./src/components/paragraph.tsx","webpack://mcsamuel/./src/components/projectCard.tsx","webpack://mcsamuel/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\"\nimport '../css/global.css'\n\nconst Navbar = ( /*breadCrumbs? : string */) => {\n    return (\n        <>\n\n\n            <nav className=\"navbar-gradient border-gray-200 dark:bg-gray-900\">\n                <div className=\"max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4\">\n                    <a href=\"https://flowbite.com/\" className=\"flex items-center\">\n                        <img src=\"https://flowbite.com/docs/images/logo.svg\" className=\"h-8 mr-3\" alt=\"Flowbite Logo\" />\n                        <span className=\"self-center text-2xl font-semibold whitespace-nowrap dark:text-white\">Portfolio</span>\n                    </a>\n                    <div className=\"flex md:order-2\">\n                        <label className=\"relative inline-flex items-center cursor-pointer\">\n\n                            <input type=\"checkbox\" value=\"\" className=\"sr-only peer\" />\n                            <div className=\"w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n                            <span className=\"ml-3 text-sm font-medium text-gray-900 dark:text-gray-300\">Light</span>\n                        </label>\n                        <button data-collapse-toggle=\"navbar-cta\" type=\"button\" className=\"inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600\" aria-controls=\"navbar-cta\" aria-expanded=\"false\">\n                            <span className=\"sr-only\">Open main menu</span>\n                            <svg className=\"w-5 h-5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 17 14\">\n                                <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M1 1h15M1 7h15M1 13h15\" />\n                            </svg>\n                        </button>\n                    </div>\n                    <div className=\"items-center justify-between hidden w-full md:flex md:w-auto md:order-1\" id=\"navbar-cta\">\n                        <ul className=\"font-sans flex flex-col font-bold text-lg p-4 md:p-0 mt-4  md:flex-row md:space-x-8 md:mt-0 md:border-0\">\n                            <li>\n                                [ Breadcrumb here ]\n                            </li>\n                            <li>\n                                <a href=\"/#projects\" className=\"block py-2 pl-3 pr-4 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 md:dark:text-blue-500\" aria-current=\"page\">Projects</a>\n                            </li>\n                            <li>\n                                <a href=\"/#skills\" className=\"block py-2 pl-3 pr-4 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 md:dark:hover:text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\">Skills</a>\n                            </li>\n                            <li>\n                                <a href=\"/#contact\" className=\"block py-2 pl-3 pr-4 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 md:dark:hover:text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\">Contact</a>\n                            </li>\n                            <li>\n                                <a href=\"/#resume\" className=\"block py-2 pl-3 pr-4 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 md:dark:hover:text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\">Resume</a>\n                            </li>\n                            <li>\n                                <a href=\"/#about\" className=\"block py-2 pl-3 pr-4 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 md:dark:hover:text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\">About</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n\n\n        </>\n    );\n};\n\n\nexport default Navbar;","import * as React from \"react\"\nimport '../css/global.css'\n\ninterface CenteredTitleProps {\n    title : string;\n    id?: string; \n    size?  : string;\n    topChevron? : boolean;\n}\nconst CenteredTitle = (\n{title, id=\"\", size=\"5rem\", topChevron=false }: CenteredTitleProps\n)  => {\n\n    return (\n        <div className=\"my-20\">\n            { topChevron ? <div id={id} className=\"my-10 justify-center flex\">\n                <img\n                    src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 16 16'><path fill='currentColor' d='M8 10.18L2.39 4.52l-.89.87l5.59 5.71a1.18 1.18 0 0 0 .86.39a1.13 1.13 0 0 0 .85-.39l5.7-5.7l-.88-.89z' /%3E%3C/svg%3E\" />\n            </div> : '' }\n            <span className=\"font-sans font-bold text-4xl md:text-7xl justify-center flex text-primary dark:text-white\" >{title}</span>\n        </div>\n    );\n};\n\nexport default CenteredTitle;","import * as React from \"react\"\nimport '../css/global.css'\n\ninterface AvatarPortraitProps{\n    imageUrl : string;\n    height?: string;\n    width?: string;\n    altText?: string;\n}\n\nconst AvatarPortrait = ( {imageUrl, height=\"380px\", width=\"380px\", altText=\"avatar-image\"} : AvatarPortraitProps ) => {\n    return (\n            <>\n                <img className=\"border-2 border-gray rounded-24\" src={imageUrl} alt={altText} height={height} width={width} />\n            </>\n    );\n};\n\nexport default AvatarPortrait;","import * as React from \"react\";\nimport '../css/global.css'\n\ninterface ButtonProps {\n    text: string;\n    link: string;\n    size?: string;\n    background?: string;\n    \n\n}\n\nconst Button = ({ text, link, size=\"regular\", background=\"default\" }: ButtonProps) => {\n    let classNames = \"rounded-24 p-2 px-4 primary-text bg-accent font-bold font-sans \";\n\n    // if (background == \"black\") {\n    //     classNames.concat(\" bg-accent \")\n    // }\n    // else{\n    // classNames.concat(\" bg-accent \");}\n\n    // size === \"large\" ? classNames=classNames.concat(\"big-button\"): \"\";\n\n    return (\n        <a href={link}>\n            <button className={classNames} type=\"button\">{text}</button>\n        </a>\n    );\n}\n\nexport default Button;","import * as React from \"react\"\nimport '../css/global.css'\n\ninterface ParagraphProps{\n    text: string;\n}\nconst Paragraph = ({text}: ParagraphProps) => {\n    return (\n        <>\n            <p className=\"font-serif font-normal p-1\" style={{width:\"24rem\"}}>{text}</p>\n        </>\n    );\n}\n\nexport default Paragraph ;","import * as React from \"react\"\nimport '../css/global.css'\nimport Paragraph from \"./paragraph\";\nimport Button from \"./button\";\n\ninterface ProjectCardProps {\n\n    platform: string;\n    type: string;\n\n    name: string;\n    technologies: string[];\n    description: string;\n\n    logoUrl?: string;\n    imgUrl?: string;\n    alt?: string;\n\n    openUrl? : string;\n    moreUrl?: string;\n\n\n}\n\nconst ProjectCard = ({ platform,\n    type,\n    name,\n    technologies,\n    description,\n    imgUrl,\n    logoUrl,\n    openUrl=\"#\",\n    moreUrl=\"#\",\n    alt = \"project-image\" }: ProjectCardProps) => {\n\n    return (\n        <div className=\"m-3 rounded-24 border border-grey p-1\">\n            <div className=\"flex mb-1\">\n                <img src={logoUrl} alt={\"logo\"} width={\"5rem\"} height={\"5rem\"} className=\"mr-2\" />\n                <div className=\"flex grid-rows-2\">\n                    <span className=\"text-lg font-sans\">{type}</span>\n                    <span className=\"text-md font-sans\">{platform}</span>\n                </div>\n            </div>\n            <div className=\"mb-1\">\n                <img src={imgUrl} alt={alt} width={\"5rem\"} height={\"5rem\"} className=\"mr-2\" />\n            </div>\n            <div className=\"mb-2\">\n                <span className=\"text-lg font-bold font-serif\">{name}</span>\n                <span className=\"text-md font-serif\">{technologies}</span>\n            </div>\n            <div className=\"mb-2\">\n                <Paragraph text={description} />\n            </div>\n\n            <div className=\"flex justify-end\">\n                <Button text=\"open\" link={openUrl}/>\n                <Button text=\"more\" link={moreUrl}/>\n            </div>\n        </div>\n    );\n\n};\n\nexport default ProjectCard;\n\n","import * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport '../css/global.css'\nimport Navbar from \"../components/navbar\"\nimport CenteredTitle from \"../components/centeredTitle\"\nimport AvatarPortrait from \"../components/avatarPortrait\"\nimport Button from \"../components/button\"\nimport Paragraph from \"../components/paragraph\"\nimport ProjectCard from \"../components/projectCard\"\nimport JSON from \"json5\"\nimport parseJson from \"parse-json\"\n\n\n\n\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n}\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n}\nconst headingAccentStyles = {\n\n  color: \"#663399\",\n}\nconst paragraphStyles = {\n  marginBottom: 48,\n}\nconst codeStyles = {\n  color: \"#8A6534\",\n  padding: 4,\n  backgroundColor: \"#FFF4DB\",\n  fontSize: \"1.25rem\",\n  borderRadius: 4,\n}\nconst listStyles = {\n  marginBottom: 96,\n  paddingLeft: 0,\n}\nconst doclistStyles = {\n  paddingLeft: 0,\n}\nconst listItemStyles = {\n  fontWeight: 300,\n  fontSize: 24,\n  maxWidth: 560,\n  marginBottom: 30,\n}\n\nconst linkStyle = {\n  color: \"#8954A8\",\n  fontWeight: \"bold\",\n  fontSize: 16,\n  verticalAlign: \"5%\",\n}\n\nconst docLinkStyle = {\n  ...linkStyle,\n  listStyleType: \"none\",\n  display: `inline-block`,\n  marginBottom: 24,\n  marginRight: 12,\n}\n\nconst descriptionStyle = {\n  color: \"#232129\",\n  fontSize: 14,\n  marginTop: 10,\n  marginBottom: 0,\n  lineHeight: 1.25,\n}\n\nconst docLinks = [\n  {\n    text: \"TypeScript Documentation\",\n    url: \"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\",\n    color: \"#8954A8\",\n  },\n  {\n    text: \"GraphQL Typegen Documentation\",\n    url: \"https://www.gatsbyjs.com/docs/how-to/local-development/graphql-typegen/\",\n    color: \"#8954A8\",\n  }\n]\n\nconst badgeStyle = {\n  color: \"#fff\",\n  backgroundColor: \"#088413\",\n  border: \"1px solid #088413\",\n  fontSize: 11,\n  fontWeight: \"bold\",\n  letterSpacing: 1,\n  borderRadius: 4,\n  padding: \"4px 6px\",\n  display: \"inline-block\",\n  position: \"relative\" as \"relative\",\n  top: -2,\n  marginLeft: 10,\n  lineHeight: 1,\n}\n\nconst links = [\n  {\n    text: \"Tutorial\",\n    url: \"https://www.gatsbyjs.com/docs/tutorial/getting-started/\",\n    description:\n      \"A great place to get started if you're new to web development. Designed to guide you through setting up your first Gatsby site.\",\n    color: \"#E95800\",\n  },\n  {\n    text: \"How to Guides\",\n    url: \"https://www.gatsbyjs.com/docs/how-to/\",\n    description:\n      \"Practical step-by-step guides to help you achieve a specific goal. Most useful when you're trying to get something done.\",\n    color: \"#1099A8\",\n  },\n  {\n    text: \"Reference Guides\",\n    url: \"https://www.gatsbyjs.com/docs/reference/\",\n    description:\n      \"Nitty-gritty technical descriptions of how Gatsby works. Most useful when you need detailed information about Gatsby's APIs.\",\n    color: \"#BC027F\",\n  },\n  {\n    text: \"Conceptual Guides\",\n    url: \"https://www.gatsbyjs.com/docs/conceptual/\",\n    description:\n      \"Big-picture explanations of higher-level Gatsby concepts. Most useful for building understanding of a particular topic.\",\n    color: \"#0D96F2\",\n  },\n  {\n    text: \"Plugin Library\",\n    url: \"https://www.gatsbyjs.com/plugins\",\n    description:\n      \"Add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.\",\n    color: \"#8EB814\",\n  },\n  {\n    text: \"Build and Host\",\n    url: \"https://www.gatsbyjs.com/cloud\",\n    badge: true,\n    description:\n      \"Now you’re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!\",\n    color: \"#663399\",\n  },\n]\n\n// -------------------------------------------------\n\nconst projectsData = [\n  {\n    \"platform\": \"web\",\n    \"type\": \"fullstack\",\n    \"name\": \"Accomo-Venient\",\n    \"technologies\": \"php, mysql, css, javascript, jquery\",\n    \"description\": \"description here\",\n    \"experience\": \"--how was, and how did it go it ?--\",\n    \"imgUrl\": \"\",\n    \"logoUrl\": \"\",\n    \"openUrl\": \"#\",\n    \"moreUrl\": \"#\",\n    \"altText\": \"\",\n    \"images\": []\n  },\n\n]; //JSON.parse(JSON.stringify(parseJson(\"../json/projects.json\")));\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <>\n      <div>\n        <Navbar></Navbar>\n\n        <CenteredTitle title={\"MC SAMUEL SHOKO\"} ></CenteredTitle>\n\n        <div className=\"flex\">\n          <AvatarPortrait\n            imageUrl={\"https://flowbite.com/docs/images/logo.svg\"}\n          />\n          <div>\n            <Paragraph text=\"One should, nevertheless, consider that a\n              description of the basic reason of the market\n              tendencies can be regarded as decidedly\n              insignificant.\" />\n            <Button text=\"Download Resume\" link={\"#resume\"} size={\"large\"} />\n\n          </div>\n        </div>\n\n        <CenteredTitle title=\"PROJECTS\" topChevron={true} id=\"projects\"></CenteredTitle>\n        {/* <pre>{JSON.stringify(projectsData)}</pre> */}\n        <div className=\"flex flex-wrap\">\n          {projectsData.map((data) => <ProjectCard platform={data.platform} type={data.type} name={data.name} technologies={data.technologies.split(',')} description={data.description} logoUrl=\"https://flowbite.com/docs/images/logo.svg\" imgUrl=\"https://flowbite.com/docs/images/logo.svg\" />)}\n\n        </div>\n\n        <CenteredTitle title=\"SKILLS\" topChevron={true} id=\"skills\"></CenteredTitle>\n        <div className=\"rounded-24 border-grey\">\n          <div className=\"\">\n\n          </div>\n          <div className=\"\">\n\n          </div>\n        </div>\n      </div>\n      <hr className=\"divide-x-2 divide-green-400\" />\n      <main style={pageStyles}>\n        <h1 style={headingStyles}>\n          Congratulations\n          <br />\n          <span style={headingAccentStyles}>— you just made a Gatsby site! 🎉🎉🎉</span>\n        </h1>\n        <p style={paragraphStyles}>\n          Edit <code style={codeStyles}>src/pages/index.tsx</code> to see this page\n          update in real-time. 😎\n        </p>\n        <ul style={doclistStyles}>\n          {docLinks.map(doc => (\n            <li key={doc.url} style={docLinkStyle}>\n              <a\n                style={linkStyle}\n                href={`${doc.url}?utm_source=starter&utm_medium=ts-docs&utm_campaign=minimal-starter-ts`}\n              >\n                {doc.text}\n              </a>\n            </li>\n          ))}\n        </ul>\n        <ul style={listStyles}>\n          {links.map(link => (\n            <li key={link.url} style={{ ...listItemStyles, color: link.color }}>\n              <span>\n                <a\n                  style={linkStyle}\n                  href={`${link.url}?utm_source=starter&utm_medium=start-page&utm_campaign=minimal-starter-ts`}\n                >\n                  {link.text}\n                </a>\n                {link.badge && (\n                  <span style={badgeStyle} aria-label=\"New Badge\">\n                    NEW!\n                  </span>\n                )}\n                <p style={descriptionStyle}>{link.description}</p>\n              </span>\n            </li>\n          ))}\n        </ul>\n        <img\n          alt=\"Gatsby G Logo\"\n          src=\"data:image/svg+xml,%3Csvg width='24' height='24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 2a10 10 0 110 20 10 10 0 010-20zm0 2c-3.73 0-6.86 2.55-7.75 6L14 19.75c3.45-.89 6-4.02 6-7.75h-5.25v1.5h3.45a6.37 6.37 0 01-3.89 4.44L6.06 9.69C7 7.31 9.3 5.63 12 5.63c2.13 0 4 1.04 5.18 2.65l1.23-1.06A7.959 7.959 0 0012 4zm-8 8a8 8 0 008 8c.04 0 .09 0-8-8z' fill='%23639'/%3E%3C/svg%3E\" />\n      </main>\n    </>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n"],"names":["React","className","href","src","alt","type","value","xmlns","fill","viewBox","stroke","d","id","_ref","title","size","topChevron","imageUrl","height","width","altText","text","link","background","style","platform","name","technologies","description","imgUrl","logoUrl","openUrl","moreUrl","Paragraph","Button","pageStyles","color","padding","fontFamily","headingStyles","marginTop","marginBottom","maxWidth","headingAccentStyles","paragraphStyles","codeStyles","backgroundColor","fontSize","borderRadius","listStyles","paddingLeft","doclistStyles","listItemStyles","fontWeight","linkStyle","verticalAlign","docLinkStyle","listStyleType","display","marginRight","descriptionStyle","lineHeight","docLinks","url","badgeStyle","border","letterSpacing","position","top","marginLeft","links","badge","projectsData","Navbar","CenteredTitle","AvatarPortrait","map","data","ProjectCard","split","doc","key","Head"],"sourceRoot":""}